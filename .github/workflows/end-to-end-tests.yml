name: End-to-end tests

# Triggers the workflow on push or pull request events
on: [push, pull_request]

jobs:
  # Runs the end-to-end test suite.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Logs debug information about the runner container.
  # - Installs NodeJS
  # - Sets up caching for NPM.
  # - Installs NPM dependencies.
  # - Starts the WordPress Docker container (wp-env FTW ðŸŽ‰)
  # - Logs the running Docker containers.
  # - Logs WordPress debug information.
  # - Logs general debug information.
  # - Logs Docker debug information (about both the Docker installation within the runner and the WordPress container)
  # - Install WordPress within the Docker container.
  # - Run the E2E tests.
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Log debug information
        run: |
          npm --version
          node --version
          curl --version
          git --version
          svn --version
          php --version
          php -i
          locale -a

      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Cache NodeJS modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Dependencies
        run: npm install

      - name: Start WordPress environment
        run: |
          npx wp-env start
          npx wp-env run cli "wp user create sucuri sucuri@sucuri.net --role=author --user_pass=password"

      - name: Log running Docker containers
        run: docker ps -a

      - name: Log WordPress debug information
        run: npx wp-env run cli wp core version

      - name: General debug information
        run: |
          npm --version
          node --version
          curl --version
          git --version
          svn --version

      - name: Docker debug information
        run: docker -v

      - name: Run E2E tests
        run: |
          cp cypress.json.example cypress.json
          npx cypress run
          
      - name: Upload Cypress tests on failure
        uses: actions/upload-artifact@v2.2.1
        if: failure()
        with:
          name: cypress
          path: |
            cypress/videos
            cypress/screenshots
        
