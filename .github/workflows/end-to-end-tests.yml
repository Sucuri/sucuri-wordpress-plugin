name: End-to-end tests

# Triggers the workflow on push or pull request events
on: [push, pull_request]

jobs:
  # Runs the end-to-end test suite.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Logs debug information about the runner container.
  # - Installs NodeJS
  # - Installs NPM dependencies.
  # - Setup WordPress env.
  # - Starts the WordPress Docker container (wp-env FTW ðŸŽ‰)
  # - Logs WordPress debug information.
  # - Logs the running Docker containers.
  # - Logs general debug information.
  # - Logs Docker debug information (about both the Docker installation within the runner and the WordPress container)
  # - Run Sucuri Scanner tests
  # - Run Firewall testes
  # - Upload Cypress tests on failure
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - env_1: "Latest WordPress on PHP 7.2"
            php: "7.2"
            wp: "latest"
          - env_2: "Latest WordPress on PHP 7.3"
            php: "7.3"
            wp: "latest"
          - env_3: "Latest WordPress on PHP 7.4"
            php: "7.4"
            wp: "latest"
          - env_4: "Latest WordPress on PHP 8.0"
            php: "8.0"
            wp: "latest"
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Log debug information
        run: |
          npm --version
          node --version
          curl --version
          git --version
          svn --version
          php --version
          php -i
          locale -a

      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 12
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Setup WordPress environment
        env:
          PHP_VERSION: ${{ matrix.php }}
          WP_VERSION: ${{ matrix.wp }}
        run: |
          if [[ $WP_VERSION == "latest" ]]; then
            echo "{ \"core\": null, \"plugins\": [\".\"], \"phpVersion\": \"$PHP_VERSION\" }" > .wp-env.override.json
          else
            echo "{ \"core\": \"WordPress/WordPress#$WP_VERSION\", \"plugins\": [\".\"], \"phpVersion\": \"$PHP_VERSION\" }" > .wp-env.override.json
          fi
          cat .wp-env.override.json

      - name: Start WordPress environment
        run: make e2e-prepare

      - name: Log WordPress debug information
        run: npx wp-env run cli wp core version

      - name: Log running Docker containers
        run: docker ps -a

      - name: General debug information
        run: |
          npm --version
          node --version
          curl --version
          git --version
          svn --version

      - name: Docker debug information
        run: docker -v

      - name: Run Sucuri Scanner tests (E2E)
        run: |
          cp cypress.json.example cypress.json
          make e2e-scanner

      - name: Run Firewall tests (E2E)
        if: env.cypress_waf_api_key
        env:
          cypress_waf_api_key: ${{ secrets.WAF_API_KEY }}
        run: make e2e-firewall
          
      - name: Upload Cypress tests on failure
        uses: actions/upload-artifact@v2.2.1
        if: failure()
        with:
          name: cypress
          path: |
            cypress/videos
            cypress/screenshots
        
